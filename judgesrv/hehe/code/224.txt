////// Author: Anoxiacxy
#include <inc/lib.h>
void sort(unsigned *a, int n){
void qsort(unsigned *, int, int, unsigned);
qsort(a, 0, n - 1, 1u << 31);
}

void qsort(unsigned *a, int begin, int end, unsigned bit) {
	int l = begin, r = end;
	while (l < r) {
		while (l < r && !(a[l] & bit)) l++;
		while (l < r &&  (a[r] & bit)) r--;
		if (l != r) {//a[l] ^= a[r] ^= a[l] ^= a[r], l++, r--;
			a[l] ^= a[r];
			a[r] ^= a[l];
			a[l] ^= a[r];
			l++, r--;
		}
	}
	if (begin == end || bit == 1) return;
	int mid = l; if (a[l] & bit) mid = l - 1; 
	if (begin <= mid) qsort(a, begin, mid, bit >> 1);
	if (mid + 1 <= end) qsort(a, mid + 1, end, bit >> 1);

}
