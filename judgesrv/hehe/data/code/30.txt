void sort(unsigned *a,int n) {
    const unsigned BITS = 11u;
    const unsigned B2 = BITS;
    const unsigned B3 = BITS + BITS;
    const int SZ = 1u << BITS;
    const unsigned MASK = (unsigned) SZ - 1;
    unsigned tmp[1<<11];
    static unsigned b[100000000];
    for (int i = 0; i < SZ; ++i)tmp[i] = 0;
    for (int i = 0; i < n; ++i) ++tmp[a[i] & MASK];
    for (int i = 1; i < SZ; ++i)tmp[i] += tmp[i - 1];
    for (int i = n - 1; i >= 0; --i)b[--tmp[a[i] & MASK]] = a[i];

    for (int i = 0; i < SZ; ++i)tmp[i] = 0;
    for (int i = 0; i < n; ++i) ++tmp[(b[i] >> B2) & MASK];
    for (int i = 1; i < SZ; ++i)tmp[i] += tmp[i - 1];
    for (int i = n - 1; i >= 0; --i)a[--tmp[(b[i] >> B2) & MASK]] = b[i];

    for (int i = 0; i < SZ; ++i)tmp[i] = 0;
    for (int i = 0; i < n; ++i) ++tmp[(a[i] >> B3) & MASK];
    for (int i = 1; i < SZ; ++i)tmp[i] += tmp[i - 1];
    for (int i = n - 1; i >= 0; --i)b[--tmp[(a[i] >> B3) & MASK]] = a[i];
    for (int i = 0; i < n; ++i)a[i] = b[i];
}
