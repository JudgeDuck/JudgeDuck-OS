#include <math.h>

#define maxn 10000005
#define mod 998244353
#define g 3

int x[maxn],y[maxn],ans[maxn];
int powmod(int a,int n)
{
	int res=1;
	while(n)
	{
		if(n&1) res=1ll*a*res%mod;
		a=1ll*a*a%mod;
		n>>=1;
	}
	return res;
}
void ntt(int a[],int n,int mode)
{
	for(int i=0,j=0;i<n;i++)
	{
		if(i<j) {int t = a[i]; a[i] = a[j]; a[j] = t;}
		int k=(n>>1);
		while(k&&(k&j)){ j^=k; k>>=1; }
		j^=k;
	}
	for(int i=1;i<n;i<<=1)
	{
		int w1=powmod(g,(mod-1)/(i<<1)),w=1;
		if(mode==-1) w1=powmod(w1,mod-2);
		for(int j=0;j<i;j++,w=1ll*w*w1%mod)
			for(int l=j,r=l+i;l<n;l+=(i<<1),r=l+i)
			{
				int temp=1ll*w*a[r]%mod;
				a[r]=(a[l]-temp+mod)%mod;
				a[l]=(a[l]+temp)%mod;
			}
	}
	if(mode==-1)
	{
		int inv=powmod(n,mod-2);
		for(int i=0;i<n;i++) a[i]=1ll*a[i]*inv%mod;
	}
}
void mul(const int a[],int l1,const int b[],int l2,int c[])
{
	static int ta[maxn],tb[maxn];
	int len=1;
	while(len<l1+l2-1) len<<=1;
	for(int i=0;i<len;i++) ta[i]=tb[i]=0;
	for(int i=0;i<l1;i++) ta[i]=a[i];
	for(int i=0;i<l2;i++) tb[i]=b[i];
	ntt(ta,len,1);ntt(tb,len,1);
	for(int i=0;i<len;i++) ta[i]=1ll*ta[i]*tb[i]%mod;
	ntt(ta,len,-1);
	for(int i=0;i<len;i++) c[i]=ta[i];
}

void poly_multiply(unsigned *a, int n, unsigned *b, int m, unsigned *c)
{
	mul((int *)a, n, (int *)b, m, (int *)c);
}
